version: "3.8"
services:
  api:
    container_name: sample-detection-api
    build:
      context: .
      dockerfile: ./api/Dockerfile
      args:
        CLI_AWS_ACCESS_KEY_ID: ${CLI_AWS_ACCESS_KEY_ID}
        CLI_AWS_SECRET_ACCESS_KEY: ${CLI_AWS_SECRET_ACCESS_KEY}
        AWS_ROLE_ARN: ${AWS_ROLE_ARN}
    environment:
      AWS_S3_ENDPOINT: ${AWS_S3_ENDPOINT}
      AWS_SQS_ENDPOINT: ${AWS_SQS_ENDPOINT}
      BUCKET_NAME: ${BUCKET_NAME}
      QUEUE_NAME: ${QUEUE_NAME}
      MESSAGE_GROUP_ID: ${MESSAGE_GROUP_ID}
      DEADLETTER_QUEUE_NAME: ${DEADLETTER_QUEUE_NAME}
      ACCOUNT_ID: ${ACCOUNT_ID}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      # API_KEY: ${API_KEY}
      # API_DOMAIN: ${API_DOMAIN}
    volumes:
      - ./api/:/code
      - ./lib/:/code/lib
      - ./schemas/:/code/schemas
      - ./test/:/code/test
      - ${NPM_CACHE_DIR:-node-modules}:/code/node_modules:cached
      - ${PIP_CACHE_DIR_API:-cache-api}:/root/.cache
    ports:
      - "3333:3333"
    tty: true
  analysis-worker:
    container_name: sample-detection-worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile.dev
      args:
        AWS_ROLE_ARN: ${AWS_ROLE_ARN}
        DEPLOY_KEY: ${DEPLOY_KEY}
    environment:
      AWS_S3_ENDPOINT: ${AWS_S3_ENDPOINT}
      AWS_SQS_ENDPOINT: ${AWS_SQS_ENDPOINT}
      BUCKET_NAME: ${BUCKET_NAME}
      QUEUE_NAME: ${QUEUE_NAME}
      MESSAGE_GROUP_ID: ${MESSAGE_GROUP_ID}
      AWS_ACCESS_KEY_ID: ${CLI_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${CLI_AWS_SECRET_ACCESS_KEY}
      ACCOUNT_ID: ${ACCOUNT_ID}
    ports:
      - "8080:8080"
    tty: true
    volumes:
      - ./worker/:/code
      - ./lib/:/code/lib
      - ./schemas/:/code/schemas
      - ./test/:/code/test
      - ${PIP_CACHE_DIR_WORKER:-cache-worker}:/root/.cache
  fake-s3:
    image: lphoward/fake-s3
    ports:
      - 4569:4569
  fake-sqs:
    image: evalphobia/fake_sqs:1.0.2
    command: |
      /bin/sh -c 'fake_sqs -d --pid /var/run/fake_sqs.pid && \
      /usr/local/bin/go-sqs-create ${QUEUE_NAME} test_queue && \
      /bin/sh'
    ports:
      - 4568:4568
    tty: true
    environment:
      AWS_SQS_ENDPOINT: http://localhost:4568
  sqs-d:
    image: fterrag/simple-sqsd:latest
    environment:
      AWS_ACCESS_KEY_ID: ${CLI_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${CLI_AWS_SECRET_ACCESS_KEY}
      SQSD_QUEUE_REGION: ${AWS_DEFAULT_REGION}
      SQSD_QUEUE_URL: ${AWS_SQS_ENDPOINT}/${QUEUE_NAME}
      SQSD_HTTP_URL: http://analysis-worker:8080/sqs_receiver
      SQSD_AWS_ENDPOINT: ${AWS_SQS_ENDPOINT}
      SQSD_HTTP_MAX_CONNS: 1
      SQSD_HTTP_TIMEOUT: 100
    depends_on:
      - fake-sqs
      - analysis-worker
  echo-server:
    image: mendhak/http-https-echo:17
    environment:
      - HTTP_PORT=80
    ports:
      - 3000:80

volumes:
  cache-worker:
  cache-api:
  node-modules:
